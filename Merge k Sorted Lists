/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        int count = 0;
        ListNode mergedList = new ListNode(0);
        ListNode curr = mergedList;
        while (count < lists.length) {
            int idx = 0;
            ListNode node = null;
            for (int i = 0; i < lists.length; ++i) {
                ListNode n = lists[i];
                if (n != null) {
                    if (node == null) {
                        idx = i;
                        node = n;    
                    }
                    else {
                        if (n.val < node.val) {
                            idx = i;
                            node = n;
                        }
                    }
                }
            }
            if (lists[idx] != null) {
                lists[idx] = lists[idx].next;                
            }
            if (node == null) break;
            curr.next = node;
            curr = curr.next;
        }

        return mergedList.next;
    }
}
