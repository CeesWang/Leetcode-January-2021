/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        int count = 0;
        ListNode mergedList = new ListNode(0);
        ListNode curr = mergedList;
        while (count < lists.length) {
            int idx = 0;
            Integer val = null;
            for (int i = 0; i < lists.length; ++i) {
                ListNode node = lists[i];
                if (node != null) {
                    if (val == null) {
                        val = node.val;
                    }
                    else {
                        if (node.val < val) {
                            idx = i;
                            val = node.val;
                        }
                    }
                    curr.next = node;
                    curr = curr.next;
                    node = node.next;
                    if (node == null) count++;
                }
            }
            
        }

        return mergedList.next;
    }
}
