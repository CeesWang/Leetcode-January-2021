class Solution {
    public boolean closeStrings(String word1, String word2) {
        if (word1.length() != word2.length()) {
            return false;
        }
        int len = word1.length();
        int [] arr1 = new int [26];
        int [] arr2 = new int [26];
        for (int i = 0; i < len; ++i) {
            arr1[word1.charAt(i) - 'a']++;
            arr2[word2.charAt(i) - 'a']++;
        }
        PriorityQueue<Integer> pq1 = new PriorityQueue<>();
        PriorityQueue<Integer> pq2 = new PriorityQueue<>();
        for (int i = 0; i < len; ++i) { // checks if there are any different letters 
            if (arr2[word1.charAt(i) - 'a'] == 0) {
                return false;
            }
            pq1.add(arr1[word1.charAt(i) - 'a']);
            pq2.add(arr2[word2.charAt(i) - 'a']);
        }
        while (!pq1.isEmpty()) {
            if (!pq1.poll().equals(pq2.poll())) {
                return false;
            }            
        }
        return true;
    }
}
