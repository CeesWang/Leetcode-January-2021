class Solution {
    public String longestPalindrome(String s) {
        if (s.length() == 0) {
            return "";
        }
        char [] charArr = s.toCharArray();
        int len = charArr.length;
        int max = 0, left = 0, right = 0;
        for (int i = 0; i < charArr.length; ++i) {
            int l = i;
            int r = i;
            while (l > 0 && r < len - 1 && charArr[l - 1] == charArr[r + 1]) {
                l--;
                r++;
            }
            if (r - l + 1 > max) {
                left = l;
                right = r;
                max = Math.max(r - l + 1, max);
            }
            l = i - 1;
            r = i;
            if (l >= 0 && r <= len - 1 && charArr[l] == charArr[r]) {
                while (l > 0 && r < len - 1 && charArr[l - 1] == charArr[r + 1]) {
                    l--;
                    r++;
                }
                if (r - l + 1 > max) {
                    left = l;
                    right = r;
                    max = Math.max(r - l + 1, max);
                }
            }
        }
        return s.substring(left, right + 1);
    }
}
